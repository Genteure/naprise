{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Naprise \u00b6 Naprise is a .NET library that allows you to easily send notifications to popular messaging services like Telegram, Discord, and more. Naprise is heavily inspired by Apprise . Quick Start \u00b6 Link to NuGet: https://www.nuget.org/packages/Naprise dotnet add package Naprise # or Install-Package Naprise var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Naprise"},{"location":"#naprise","text":"Naprise is a .NET library that allows you to easily send notifications to popular messaging services like Telegram, Discord, and more. Naprise is heavily inspired by Apprise .","title":"Naprise"},{"location":"#quick-start","text":"Link to NuGet: https://www.nuget.org/packages/Naprise dotnet add package Naprise # or Install-Package Naprise var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Quick Start"},{"location":"new-service/","text":"Adding new service \u00b6 A service is any class that: Implements INotifier Have a public constructor that takes a ServiceConfig Have a NapriseNotificationService attribute Services can then be added to the ServiceRegistry Naprise . DefaultRegistry . Add < MyService >(); // or Naprise . DefaultRegistry . Add ( typeof ( MyService )); var registry = new ServiceRegistry (). AddDefaultServices (); registry . Add < MyService >(); // or registry . Add ( typeof ( MyService )); In addition, services provided by Naprise should: Be sealed Inherit from NotificationService Have a NotificationServiceWebsite attribute Have a NotificationServiceApiDoc attribute If a service requires another library, consider creating a new project for it so that the dependency is not required for users don't use the service. Designing the service URL \u00b6 The service URL is the way to configure a service. Here are some guidelines for designing the URL: IMPORTANT : Host MUST NOT be used for passing tokens or api keys, as it is case insensitive, all uppercase characters will be converted to lowercase. Prefer using the service's full name as the URL scheme. For example, use discord instead of dc . For self-hostable services, add s to the scheme for requests over https/tls. For example, use apprise for calling API over http and apprises for calling API over https. Prefer using host and path for required arguments. Prefer using query parameters for optional arguments. Implementing the service \u00b6 Steps to implement a service: Create a new file in src/Naprise/Service . Copy the content of src/Naprise/Service/Template.cs to the new file. Rename the class name to the service name. Fill in all the attributes. Parse the URL in the constructor. Implement the SendAsync method. Some considerations when implementing the constructor: Use Flurl.Url instead of System.Uri for parsing and building URLs. Throw NapriseInvalidUrlException if the URL is invalid, e.g. missing required arguments, or contains invalid arguments. Check the token format if applicable, but do not send network requests in the constructor. Store the parsed arguments in readonly fields. Some considerations when implementing the SendAsync method: Use Flurl.Url for parsing and building URLs. If the service supports setting color, convert the message type to a color using this.Asset.GetColor(type) . If the service does not support setting color, prepend the message with the string returned by this.Asset.GetAscii(type) . If the service only support one message format (e.g. markdown), convert the message to the supported format using message.Prefer<Format>Body() . If the service supports multiple message formats, it's up to you to decide which format to use. Check the response and throw NapriseNotifyFailedException if the request failed. Adding tests \u00b6 If you're adding a new service for Naprise: Please also add tests for the new service in src/Naprise.Tests/Service/ . Please add test cases for all valid URLs. You can optionally add tests for invalid URLs and tests for sending messages, see DiscordTests.cs for an example. Adding documentation \u00b6 Please add documentation for the new service in docs/docs/services/ . Add link to the new page in nav section of docs/mkdocs.yml . Generate README.md and the json file for documentation website by running dotnet run --project src/Naprise.DocGenerator Template for implementing new service \u00b6 Check GitHub for latest version of this template. If you are not adding the service to Naprise, the namespace should also be changed. using Flurl ; using System ; using System.Net.Http.Json ; using System.Text.Json ; using System.Threading ; using System.Threading.Tasks ; namespace Naprise.Service { [NapriseNotificationService(\"Template\", \"\", SupportText = true, SupportMarkdown = true, SupportHtml = false)] // TODO fill in blank [NotificationServiceWebsite(\"\")] // TODO fill in blank [NotificationServiceApiDoc(\"\")] // TODO fill in blank // TODO change visibility and class name internal sealed class Template : NotificationService { // TODO change class name public Template ( ServiceConfig config ) : base ( config : config , bypassChecks : false ) { var url = config . Url ; var segment = url . PathSegments ; var query = url . QueryParams ; // fill in all the blanks and change visibility to public throw new InvalidProgramException ( \"this is a template for adding new notification services\" ); } public override async Task NotifyAsync ( Message message , CancellationToken cancellationToken = default ) { message . ThrowIfEmpty (); // TODO build the message body var payload = new Payload { // TODO fill payload // TODO check message.Type }; var url = new Url ( $\"{(true ? \" https \" : \" http \")}://{\" localhost \"}\" ). AppendPathSegments ( \"example\" ); var content = JsonContent . Create ( payload , options : SharedJsonOptions . SnakeCaseNamingOptions ); cancellationToken . ThrowIfCancellationRequested (); var resp = await this . HttpClientFactory (). PostAsync ( url , content , cancellationToken ); var respText = await resp . Content . ReadAsStringAsync (); if (! resp . IsSuccessStatusCode ) { throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}: {resp.StatusCode}\" ) // TODO change class name { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } try { var jobj = JsonDocument . Parse ( respText ); // TODO parse response and check if it's successful var status = jobj . RootElement . GetProperty ( \"status\" ). GetString (); if ( status != \"ok\" ) { var respMessage = jobj . RootElement . GetProperty ( \"message\" ). GetString (); throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}: \\\"{respMessage}\\\"\" ) { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } } catch ( Exception ex ) { throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}\" , ex ) { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } } private class Payload { // TODO add payload } } }","title":"Adding new service"},{"location":"new-service/#adding-new-service","text":"A service is any class that: Implements INotifier Have a public constructor that takes a ServiceConfig Have a NapriseNotificationService attribute Services can then be added to the ServiceRegistry Naprise . DefaultRegistry . Add < MyService >(); // or Naprise . DefaultRegistry . Add ( typeof ( MyService )); var registry = new ServiceRegistry (). AddDefaultServices (); registry . Add < MyService >(); // or registry . Add ( typeof ( MyService )); In addition, services provided by Naprise should: Be sealed Inherit from NotificationService Have a NotificationServiceWebsite attribute Have a NotificationServiceApiDoc attribute If a service requires another library, consider creating a new project for it so that the dependency is not required for users don't use the service.","title":"Adding new service"},{"location":"new-service/#designing-the-service-url","text":"The service URL is the way to configure a service. Here are some guidelines for designing the URL: IMPORTANT : Host MUST NOT be used for passing tokens or api keys, as it is case insensitive, all uppercase characters will be converted to lowercase. Prefer using the service's full name as the URL scheme. For example, use discord instead of dc . For self-hostable services, add s to the scheme for requests over https/tls. For example, use apprise for calling API over http and apprises for calling API over https. Prefer using host and path for required arguments. Prefer using query parameters for optional arguments.","title":"Designing the service URL"},{"location":"new-service/#implementing-the-service","text":"Steps to implement a service: Create a new file in src/Naprise/Service . Copy the content of src/Naprise/Service/Template.cs to the new file. Rename the class name to the service name. Fill in all the attributes. Parse the URL in the constructor. Implement the SendAsync method. Some considerations when implementing the constructor: Use Flurl.Url instead of System.Uri for parsing and building URLs. Throw NapriseInvalidUrlException if the URL is invalid, e.g. missing required arguments, or contains invalid arguments. Check the token format if applicable, but do not send network requests in the constructor. Store the parsed arguments in readonly fields. Some considerations when implementing the SendAsync method: Use Flurl.Url for parsing and building URLs. If the service supports setting color, convert the message type to a color using this.Asset.GetColor(type) . If the service does not support setting color, prepend the message with the string returned by this.Asset.GetAscii(type) . If the service only support one message format (e.g. markdown), convert the message to the supported format using message.Prefer<Format>Body() . If the service supports multiple message formats, it's up to you to decide which format to use. Check the response and throw NapriseNotifyFailedException if the request failed.","title":"Implementing the service"},{"location":"new-service/#adding-tests","text":"If you're adding a new service for Naprise: Please also add tests for the new service in src/Naprise.Tests/Service/ . Please add test cases for all valid URLs. You can optionally add tests for invalid URLs and tests for sending messages, see DiscordTests.cs for an example.","title":"Adding tests"},{"location":"new-service/#adding-documentation","text":"Please add documentation for the new service in docs/docs/services/ . Add link to the new page in nav section of docs/mkdocs.yml . Generate README.md and the json file for documentation website by running dotnet run --project src/Naprise.DocGenerator","title":"Adding documentation"},{"location":"new-service/#template-for-implementing-new-service","text":"Check GitHub for latest version of this template. If you are not adding the service to Naprise, the namespace should also be changed. using Flurl ; using System ; using System.Net.Http.Json ; using System.Text.Json ; using System.Threading ; using System.Threading.Tasks ; namespace Naprise.Service { [NapriseNotificationService(\"Template\", \"\", SupportText = true, SupportMarkdown = true, SupportHtml = false)] // TODO fill in blank [NotificationServiceWebsite(\"\")] // TODO fill in blank [NotificationServiceApiDoc(\"\")] // TODO fill in blank // TODO change visibility and class name internal sealed class Template : NotificationService { // TODO change class name public Template ( ServiceConfig config ) : base ( config : config , bypassChecks : false ) { var url = config . Url ; var segment = url . PathSegments ; var query = url . QueryParams ; // fill in all the blanks and change visibility to public throw new InvalidProgramException ( \"this is a template for adding new notification services\" ); } public override async Task NotifyAsync ( Message message , CancellationToken cancellationToken = default ) { message . ThrowIfEmpty (); // TODO build the message body var payload = new Payload { // TODO fill payload // TODO check message.Type }; var url = new Url ( $\"{(true ? \" https \" : \" http \")}://{\" localhost \"}\" ). AppendPathSegments ( \"example\" ); var content = JsonContent . Create ( payload , options : SharedJsonOptions . SnakeCaseNamingOptions ); cancellationToken . ThrowIfCancellationRequested (); var resp = await this . HttpClientFactory (). PostAsync ( url , content , cancellationToken ); var respText = await resp . Content . ReadAsStringAsync (); if (! resp . IsSuccessStatusCode ) { throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}: {resp.StatusCode}\" ) // TODO change class name { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } try { var jobj = JsonDocument . Parse ( respText ); // TODO parse response and check if it's successful var status = jobj . RootElement . GetProperty ( \"status\" ). GetString (); if ( status != \"ok\" ) { var respMessage = jobj . RootElement . GetProperty ( \"message\" ). GetString (); throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}: \\\"{respMessage}\\\"\" ) { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } } catch ( Exception ex ) { throw new NapriseNotifyFailedException ( $\"Failed to send notification to {nameof(Template)}\" , ex ) { Notifier = this , Notification = message , ResponseStatus = resp . StatusCode , ResponseBody = respText , }; } } private class Payload { // TODO add payload } } }","title":"Template for implementing new service"},{"location":"service-url/","text":"Service URL \u00b6 The Naprise service URL is the way to configure a service. They have the following format: service://configuration/?query=values The Services page have a list of all supported services and their URL format. Some service also have a version of scheme with s added to the end, which is used for https/tls. For example, apprise is used for requests over http and apprises is used for requests over https. Compared to Apprise \u00b6 Naprise's service URL are not compatible with Apprise 's URL. There are no global parameters in Naprise. Naprise always send the message as is to the service, equivalent to Apprise's overflow=upstream . Instead of letting the user specify the message format, each service in Naprise decides what format to use. You can provide message in multiple formats, each service will choose the format it supports, converting the message format as needed. If you want to send to a selfhosted self-signed service, instead of adding verify=no to the URL, you can create a new HttpClientHandlr with the ServerCertificateCustomValidationCallback property set to always return true , create a new HttpClient with the handler then assign it to Naprise.DefaultHttpClient . See Usage Examples for more details. Instead of using cto and rto to specify request timeouts, you can set the Timeout property of Naprise.DefaultHttpClient , or pass a CancelationToken to the NotifyAsync method.","title":"Service URL"},{"location":"service-url/#service-url","text":"The Naprise service URL is the way to configure a service. They have the following format: service://configuration/?query=values The Services page have a list of all supported services and their URL format. Some service also have a version of scheme with s added to the end, which is used for https/tls. For example, apprise is used for requests over http and apprises is used for requests over https.","title":"Service URL"},{"location":"service-url/#compared-to-apprise","text":"Naprise's service URL are not compatible with Apprise 's URL. There are no global parameters in Naprise. Naprise always send the message as is to the service, equivalent to Apprise's overflow=upstream . Instead of letting the user specify the message format, each service in Naprise decides what format to use. You can provide message in multiple formats, each service will choose the format it supports, converting the message format as needed. If you want to send to a selfhosted self-signed service, instead of adding verify=no to the URL, you can create a new HttpClientHandlr with the ServerCertificateCustomValidationCallback property set to always return true , create a new HttpClient with the handler then assign it to Naprise.DefaultHttpClient . See Usage Examples for more details. Instead of using cto and rto to specify request timeouts, you can set the Timeout property of Naprise.DefaultHttpClient , or pass a CancelationToken to the NotifyAsync method.","title":"Compared to Apprise"},{"location":"usage-examples/","text":"Usage Examples \u00b6 Send to multiple services \u00b6 // You can also pass in any enumerable of string like List<string> or string[] var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" , \"telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , }); Adding a custom service \u00b6 Naprise . DefaultRegistry . Add < MyService >(); See Adding new service for more details. If you are implementing a new service, please consider submitting a pull request so everyone can benefit from your work, thanks! Using ServiceRegistry \u00b6 var registry = new ServiceRegistry (). AddDefaultServices (); var notifier = registry . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" ); Ignore invalid schemes and URLs \u00b6 Naprise . DefaultRegistry . IgnoreUnknownScheme = true ; // \"invalid\" is not a valid scheme var notifier = Naprise . Create ( \"invalid://anything\" ); Assert . Equal ( Naprise . NoopNotifier , notifier ); Naprise . DefaultRegistry . IgnoreInvalidUrl = true ; // \"discord\" expects a id and a token var notifier = Naprise . Create ( \"discord://missing-token\" ); Assert . Equal ( Naprise . NoopNotifier , notifier ); Customizing the HttpClient \u00b6 Changing the HttpClient used by one registry: var registry = new ServiceRegistry (). AddDefaultServices (); registry . HttpClient = new HttpClient (); // registry.HttpClient is null by default // when it is null, Naprise.DefaultHttpClient is used or globally: Naprise . DefaultHttpClient = new HttpClient (); New HttpClient instances are used even if it's set after the notifier is created. // Create a notifier first var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" ); // Then change the default HttpClient Naprise . DefaultHttpClient = new HttpClient (); // The notifier uses the new HttpClient await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , }); Setting a custom user agent \u00b6 Naprise . DefaultHttpClient . DefaultRequestHeaders . Add ( \"User-Agent\" , \"MyGreatApp/0.1.0\" ); Using proxies \u00b6 var handler = new HttpClientHandler { Proxy = new WebProxy ( \"http://127.0.0.1:8080\" ), }; Naprise . DefaultHttpClient = new HttpClient ( handler ); Send to a selfhosted self-signed service \u00b6 a.k.a how to disable SSL certificate validation. var handler = new HttpClientHandler { ServerCertificateCustomValidationCallback = ( message , cert , chain , errors ) => true }; Naprise . DefaultHttpClient = new HttpClient ( handler ); // Apprise API at https://selfhosted.example.com with a self-signed certificate var notifier = Naprise . Create ( \"apprises://selfhosted.example.com/apprise\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Usage Examples"},{"location":"usage-examples/#usage-examples","text":"","title":"Usage Examples"},{"location":"usage-examples/#send-to-multiple-services","text":"// You can also pass in any enumerable of string like List<string> or string[] var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" , \"telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Send to multiple services"},{"location":"usage-examples/#adding-a-custom-service","text":"Naprise . DefaultRegistry . Add < MyService >(); See Adding new service for more details. If you are implementing a new service, please consider submitting a pull request so everyone can benefit from your work, thanks!","title":"Adding a custom service"},{"location":"usage-examples/#using-serviceregistry","text":"var registry = new ServiceRegistry (). AddDefaultServices (); var notifier = registry . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" );","title":"Using ServiceRegistry"},{"location":"usage-examples/#ignore-invalid-schemes-and-urls","text":"Naprise . DefaultRegistry . IgnoreUnknownScheme = true ; // \"invalid\" is not a valid scheme var notifier = Naprise . Create ( \"invalid://anything\" ); Assert . Equal ( Naprise . NoopNotifier , notifier ); Naprise . DefaultRegistry . IgnoreInvalidUrl = true ; // \"discord\" expects a id and a token var notifier = Naprise . Create ( \"discord://missing-token\" ); Assert . Equal ( Naprise . NoopNotifier , notifier );","title":"Ignore invalid schemes and URLs"},{"location":"usage-examples/#customizing-the-httpclient","text":"Changing the HttpClient used by one registry: var registry = new ServiceRegistry (). AddDefaultServices (); registry . HttpClient = new HttpClient (); // registry.HttpClient is null by default // when it is null, Naprise.DefaultHttpClient is used or globally: Naprise . DefaultHttpClient = new HttpClient (); New HttpClient instances are used even if it's set after the notifier is created. // Create a notifier first var notifier = Naprise . Create ( \"discord://106943697/YGCTVYbXQ7_pTEv-f3jX3e\" ); // Then change the default HttpClient Naprise . DefaultHttpClient = new HttpClient (); // The notifier uses the new HttpClient await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Customizing the HttpClient"},{"location":"usage-examples/#setting-a-custom-user-agent","text":"Naprise . DefaultHttpClient . DefaultRequestHeaders . Add ( \"User-Agent\" , \"MyGreatApp/0.1.0\" );","title":"Setting a custom user agent"},{"location":"usage-examples/#using-proxies","text":"var handler = new HttpClientHandler { Proxy = new WebProxy ( \"http://127.0.0.1:8080\" ), }; Naprise . DefaultHttpClient = new HttpClient ( handler );","title":"Using proxies"},{"location":"usage-examples/#send-to-a-selfhosted-self-signed-service","text":"a.k.a how to disable SSL certificate validation. var handler = new HttpClientHandler { ServerCertificateCustomValidationCallback = ( message , cert , chain , errors ) => true }; Naprise . DefaultHttpClient = new HttpClient ( handler ); // Apprise API at https://selfhosted.example.com with a self-signed certificate var notifier = Naprise . Create ( \"apprises://selfhosted.example.com/apprise\" ); await notifier . NotifyAsync ( new Message { Type = MessageType . Success , Title = \"Hello from Naprise!\" , Markdown = \"**This** is a _test_ message. :heart:\" , });","title":"Send to a selfhosted self-signed service"},{"location":"services/","text":"Services \u00b6 Service Schemes Service's homepage Apprise apprise:// apprises:// https://github.com/caronc/apprise-api Bark bark:// barks:// https://github.com/Finb/Bark Discord discord:// https://discord.com Gotify gotify:// gotifys:// https://gotify.net/ Email via MailKit email:// smtp:// smtps:// https://genteure.github.io/naprise/services/mailkitemail Notica notica:// noticas:// https://notica.us/ notify.run notifyrun:// notifyruns:// https://notify.run/ ntfy.sh ntfy:// ntfys:// https://ntfy.sh/ OneBot 11 onebot11:// onebot11s:// https://11.onebot.dev/ OneBot 12 onebot12:// onebot12s:// https://12.onebot.dev/ PushDeer pushdeer:// pushdeers:// https://www.pushdeer.com/ PushPlus pushplus:// https://www.pushplus.plus/ ServerChan serverchan:// https://sct.ftqq.com/ Telegram telegram:// https://telegram.org/","title":"Services"},{"location":"services/#services","text":"Service Schemes Service's homepage Apprise apprise:// apprises:// https://github.com/caronc/apprise-api Bark bark:// barks:// https://github.com/Finb/Bark Discord discord:// https://discord.com Gotify gotify:// gotifys:// https://gotify.net/ Email via MailKit email:// smtp:// smtps:// https://genteure.github.io/naprise/services/mailkitemail Notica notica:// noticas:// https://notica.us/ notify.run notifyrun:// notifyruns:// https://notify.run/ ntfy.sh ntfy:// ntfys:// https://ntfy.sh/ OneBot 11 onebot11:// onebot11s:// https://11.onebot.dev/ OneBot 12 onebot12:// onebot12s:// https://12.onebot.dev/ PushDeer pushdeer:// pushdeers:// https://www.pushdeer.com/ PushPlus pushplus:// https://www.pushplus.plus/ ServerChan serverchan:// https://sct.ftqq.com/ Telegram telegram:// https://telegram.org/","title":"Services"},{"location":"services/apprise/","text":"Apprise \u00b6 Schemes: apprise:// , apprises:// Format: text, markdown, html Homepage: https://github.com/caronc/apprise-api API Documentation: https://github.com/caronc/apprise-api#persistent-storage-solution List of all supported services: Services URL Format \u00b6 apprise://{user}:{password}@{host}:{port}/{token} apprises://{user}:{password}@{host}:{port}/{token} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. token : The KEY of the Apprise API server. Query Parameters \u00b6 Parameter Description tag A tag to for Apprise API to filter target URL. format Force the format of the notification. Default is markdown Setup Guide \u00b6","title":"Apprise"},{"location":"services/apprise/#apprise","text":"Schemes: apprise:// , apprises:// Format: text, markdown, html Homepage: https://github.com/caronc/apprise-api API Documentation: https://github.com/caronc/apprise-api#persistent-storage-solution List of all supported services: Services","title":"Apprise"},{"location":"services/apprise/#url-format","text":"apprise://{user}:{password}@{host}:{port}/{token} apprises://{user}:{password}@{host}:{port}/{token} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. token : The KEY of the Apprise API server.","title":"URL Format"},{"location":"services/apprise/#query-parameters","text":"Parameter Description tag A tag to for Apprise API to filter target URL. format Force the format of the notification. Default is markdown","title":"Query Parameters"},{"location":"services/apprise/#setup-guide","text":"","title":"Setup Guide"},{"location":"services/bark/","text":"Bark \u00b6 Schemes: bark:// , barks:// Format: text Homepage: https://github.com/Finb/Bark API Documentation: https://github.com/Finb/bark-server/blob/master/docs/API_V2.md List of all supported services: Services URL Format \u00b6 bark://{host}/{token} bark://{host}:{port}/{token} barks://{host}/{token} barks://{host}:{port}/{token} Query Parameters \u00b6 Parameter Description url The URL to open when the notification is tapped. group The group of the notification. icon The icon of the notification. level The level of the notification. sound The sound of the notification. Setup Guide \u00b6 After installing Bark, you can find your push URL in the app. It should look like: https://api.day.app/kgZxA3pkswQpZ67J api.day.app is the host, and kgZxA3pkswQpZ67J is the token, so the URL would be barks://api.day.app/kgZxA3pkswQpZ67J","title":"Bark"},{"location":"services/bark/#bark","text":"Schemes: bark:// , barks:// Format: text Homepage: https://github.com/Finb/Bark API Documentation: https://github.com/Finb/bark-server/blob/master/docs/API_V2.md List of all supported services: Services","title":"Bark"},{"location":"services/bark/#url-format","text":"bark://{host}/{token} bark://{host}:{port}/{token} barks://{host}/{token} barks://{host}:{port}/{token}","title":"URL Format"},{"location":"services/bark/#query-parameters","text":"Parameter Description url The URL to open when the notification is tapped. group The group of the notification. icon The icon of the notification. level The level of the notification. sound The sound of the notification.","title":"Query Parameters"},{"location":"services/bark/#setup-guide","text":"After installing Bark, you can find your push URL in the app. It should look like: https://api.day.app/kgZxA3pkswQpZ67J api.day.app is the host, and kgZxA3pkswQpZ67J is the token, so the URL would be barks://api.day.app/kgZxA3pkswQpZ67J","title":"Setup Guide"},{"location":"services/discord/","text":"Discord \u00b6 Schemes: discord:// Format: text, markdown Homepage: https://discord.com API Documentation: https://discord.com/developers/docs/resources/webhook#execute-webhook List of all supported services: Services URL Format \u00b6 discord://{webhookId}/{webhookToken} Query Parameters \u00b6 Parameter Description username The username to use for the message. avatar_url The URL of the avatar to use for the message. tts Whether to use text-to-speech for the message. Setup Guide \u00b6 Open channel settings or server settings and go to Integrations . Create a new webhook. Copy the webhook URL. The webhook URL will look like this: https://discord.com/api/webhooks/1234567890/abcdefghijklmnopqrstuvwxyz 1234567890 is the webhook ID, and abcdefghijklmnopqrstuvwxyz is the webhook token, so the URL would be discord://1234567890/abcdefghijklmnopqrstuvwxyz Or just replace the https://discord.com/api/webhooks/ part with discord:// and you're done.","title":"Discord"},{"location":"services/discord/#discord","text":"Schemes: discord:// Format: text, markdown Homepage: https://discord.com API Documentation: https://discord.com/developers/docs/resources/webhook#execute-webhook List of all supported services: Services","title":"Discord"},{"location":"services/discord/#url-format","text":"discord://{webhookId}/{webhookToken}","title":"URL Format"},{"location":"services/discord/#query-parameters","text":"Parameter Description username The username to use for the message. avatar_url The URL of the avatar to use for the message. tts Whether to use text-to-speech for the message.","title":"Query Parameters"},{"location":"services/discord/#setup-guide","text":"Open channel settings or server settings and go to Integrations . Create a new webhook. Copy the webhook URL. The webhook URL will look like this: https://discord.com/api/webhooks/1234567890/abcdefghijklmnopqrstuvwxyz 1234567890 is the webhook ID, and abcdefghijklmnopqrstuvwxyz is the webhook token, so the URL would be discord://1234567890/abcdefghijklmnopqrstuvwxyz Or just replace the https://discord.com/api/webhooks/ part with discord:// and you're done.","title":"Setup Guide"},{"location":"services/gotify/","text":"Gotify \u00b6 Schemes: gotify:// , gotifys:// Format: text, markdown Homepage: https://gotify.net/ API Documentation: https://gotify.net/docs/pushmsg List of all supported services: Services URL Format \u00b6 gotify://{host}:{port}/{apptoken} gotifys://{host}:{port}/{apptoken} host and port : The address of the service. apptoken : The Gotify application token. Query Parameters \u00b6 Parameter Description priority The priority of the message as a number. click_url The URL to open when the message is clicked.","title":"Gotify"},{"location":"services/gotify/#gotify","text":"Schemes: gotify:// , gotifys:// Format: text, markdown Homepage: https://gotify.net/ API Documentation: https://gotify.net/docs/pushmsg List of all supported services: Services","title":"Gotify"},{"location":"services/gotify/#url-format","text":"gotify://{host}:{port}/{apptoken} gotifys://{host}:{port}/{apptoken} host and port : The address of the service. apptoken : The Gotify application token.","title":"URL Format"},{"location":"services/gotify/#query-parameters","text":"Parameter Description priority The priority of the message as a number. click_url The URL to open when the message is clicked.","title":"Query Parameters"},{"location":"services/mailkitemail/","text":"Email via MailKit \u00b6 Schemes: email:// , smtp:// , smtps:// Format: text, markdown, html Homepage: https://genteure.github.io/naprise/services/mailkitemail API Documentation: https://genteure.github.io/naprise/services/mailkitemail List of all supported services: Services This service is in a separate nuget package: Naprise.Service.MailKit . It uses MailKit to send emails. dotnet add package Naprise . Service . MailKit # or Install-Package Naprise . Service . MailKit You will need to register the service in ServiceRegistry before using it. Naprise . DefaultRegistry . AddMailKit (); email URL Format \u00b6 As a quick way to send emails from your personal email account to yourself, you can use the email URL format. email://{user}:{pass}@{domain} user : The name of your email account. pass : The password or application-secret of your email account. domain : The domain of your email account. Examples: email://john:myS3cr5t@gmail.com email://aoi:somePassword@yahoo.co.jp email://123456:furageoupjhjygto@qq.com See the table below for a list of supported domains. smtp and smtps URL Format \u00b6 If your email service is not supported by email URL, or you want to send emails from a custom email server, you can use the smtp and smtps URL formats. smtp://{smtp_host}:{smtp_port}/{from}/{to} smtps://{smtp_host}:{smtp_port}/{from}/{to} smtp://{smtp_host}:{smtp_port}/{username}/{password}/{from}/{to} smtps://{smtp_host}:{smtp_port}/{username}/{password}/{from}/{to} smtp:// : Connect to the SMTP server using unencrypted plain text or STARTTLS . smtps:// : Connect to the SMTP server using encrypted SSL/TLS . TLDR : Use smtp:// for port 25 and 587 , and smtps:// for port 465 . Some email providers' documentation refer STARTTLS as just TLS , which technically is not the same thing. SSL now days in the context of SMTP often means TLS 1.2 is being used, even if it's being called SSL and not TLS . The client will establish a SSL/TLS connection first just like HTTPS, and then start the SMTP protocol. The standard port for SMTP over SSL/TLS is 465 . STARTTLS on the other hand, is a SMTP command that tells the SMTP server to switch to TLS encryption after the connection is established. The client will establish a plain text connection first, and then send the STARTTLS command to the SMTP server, if both parties support it, the SMTP server will switch to TLS encryption. The most common port for SMTP with STARTTLS support is 587 . smtp_host : The SMTP host of your email server. smtp_port : The SMTP port of your email server, always required . username : The username of your email account. password : The password or application-secret of your email account. from : The email address of the sender. to : The email address of the recipient. If the username and password are not provided, it's assumed that the SMTP server does not require authentication, which might be the case for self-hosted local SMTP servers. Examples: smtps://smtp.gmail.com:465/jone@gmail.com/JoneDoe1234/jone@gmail.com/friend@outlook.com smtp://smtp.local:25/homeserver/password/homeserver@local/admin@local Supported Domains \u00b6 The following table lists the supported domains for email URLs and their corresponding SMTP settings. If your domain is not listed here, you can still use the smtp or smtps URL formats to send emails. Domain Name SMTP Server Encryption gmail.com Gmail smtp.gmail.com:465 SSL/TLS outlook.com Outlook smtp.office365.com:587 NONE/STARTTLS hotmail.com Outlook smtp.office365.com:587 NONE/STARTTLS live.com Outlook smtp.office365.com:587 NONE/STARTTLS outlook.jp Outlook smtp.office365.com:587 NONE/STARTTLS hotmail.co.jp Outlook smtp.office365.com:587 NONE/STARTTLS live.jp Outlook smtp.office365.com:587 NONE/STARTTLS icloud.com iCloud smtp.mail.me.com:587 NONE/STARTTLS yahoo.co.jp Yahoo \u30e1\u30fc\u30eb smtp.mail.yahoo.co.jp:465 SSL/TLS ymail.ne.jp Yahoo \u30e1\u30fc\u30eb smtp.mail.yahoo.co.jp:465 SSL/TLS zoho.com Zoho Mail smtp.zoho.com:465 SSL/TLS zohomail.com Zoho Mail smtp.zoho.com:465 SSL/TLS qq.com QQ Mail smtp.qq.com:465 SSL/TLS vip.qq.com QQ Mail smtp.qq.com:465 SSL/TLS foxmail.com QQ Mail smtp.qq.com:465 SSL/TLS 163.com Netease Mail smtp.163.com:465 SSL/TLS 126.com Netease Mail smtp.126.com:465 SSL/TLS yeah.net Netease Mail smtp.yeah.net:465 SSL/TLS vip.163.com Netease Mail smtp.vip.163.com:465 SSL/TLS vip.126.com Netease Mail smtp.vip.126.com:465 SSL/TLS 188.com Netease Mail smtp.188.com:465 SSL/TLS 139.com 139 Mail (China Mobile) smtp.139.com:465 SSL/TLS 189.cn 189 Mail (China Telecom) smtp.189.cn:465 SSL/TLS wo.cn Wo Mail (China Unicom) smtp.wo.cn:465 SSL/TLS sohu.com Sohu Mail smtp.sohu.com:465 SSL/TLS vip.sohu.com Sohu Mail smtp.vip.sohu.com:25 NONE/STARTTLS sina.com Sina Mail smtp.sina.com:465 SSL/TLS sina.cn Sina Mail smtp.sina.cn:465 SSL/TLS vip.sina.com Sina Mail smtp.vip.sina.com:465 SSL/TLS vip.sina.cn Sina Mail smtp.vip.sina.cn:465 SSL/TLS tom.com Tom Mail smtp.tom.com:465 SSL/TLS vip.tom.com Tom Mail smtp.tom.com:465 SSL/TLS 163.net Tom Mail smtp.tom.com:465 SSL/TLS 163vip.com Tom Mail smtp.tom.com:465 SSL/TLS yandex.com Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.net Yandex Mail smtp.yandex.com:465 SSL/TLS ya.ru Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.ru Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.by Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.kz Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.uz Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.fr Yandex Mail smtp.yandex.com:465 SSL/TLS narod.ru Yandex Mail smtp.yandex.com:465 SSL/TLS mail.ru Mail.ru smtp.mail.ru:465 SSL/TLS inbox.ru Mail.ru smtp.mail.ru:465 SSL/TLS list.ru Mail.ru smtp.mail.ru:465 SSL/TLS bk.ru Mail.ru smtp.mail.ru:465 SSL/TLS yahoo.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS myyahoo.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS ymail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS y7mail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS rocketmail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ar Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.au Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.br Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.co Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.hk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.hr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.mx Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.my Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.pe Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ph Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.sg Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.tr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.tw Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ua Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ve Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.vn Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.id Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.il Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.in Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.kr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.nz Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.th Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.uk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.za Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.at Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.be Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.bg Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ca Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.cl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.cz Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.de Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.dk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ee Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.es Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.fi Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.fr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.gr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.hu Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ie Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.in Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.it Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.lv Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.nl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.no Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.pl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.pt Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ro Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.se Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.sk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS 123mail.org Fastmail smtp.fastmail.com:465 SSL/TLS 150mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 150ml.com Fastmail smtp.fastmail.com:465 SSL/TLS 16mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 2-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 4email.net Fastmail smtp.fastmail.com:465 SSL/TLS 50mail.com Fastmail smtp.fastmail.com:465 SSL/TLS airpost.net Fastmail smtp.fastmail.com:465 SSL/TLS allmail.net Fastmail smtp.fastmail.com:465 SSL/TLS cluemail.com Fastmail smtp.fastmail.com:465 SSL/TLS elitemail.org Fastmail smtp.fastmail.com:465 SSL/TLS emailcorner.net Fastmail smtp.fastmail.com:465 SSL/TLS emailengine.net Fastmail smtp.fastmail.com:465 SSL/TLS emailengine.org Fastmail smtp.fastmail.com:465 SSL/TLS emailgroups.net Fastmail smtp.fastmail.com:465 SSL/TLS emailplus.org Fastmail smtp.fastmail.com:465 SSL/TLS emailuser.net Fastmail smtp.fastmail.com:465 SSL/TLS eml.cc Fastmail smtp.fastmail.com:465 SSL/TLS f-m.fm Fastmail smtp.fastmail.com:465 SSL/TLS fast-email.com Fastmail smtp.fastmail.com:465 SSL/TLS fast-mail.org Fastmail smtp.fastmail.com:465 SSL/TLS fastem.com Fastmail smtp.fastmail.com:465 SSL/TLS fastemailer.com Fastmail smtp.fastmail.com:465 SSL/TLS fastest.cc Fastmail smtp.fastmail.com:465 SSL/TLS fastimap.com Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.cn Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.co.uk Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.com Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.com.au Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.de Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.es Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.fm Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.fr Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.im Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.in Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.jp Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.mx Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.net Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.nl Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.org Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.se Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.to Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.tw Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.uk Fastmail smtp.fastmail.com:465 SSL/TLS fastmailbox.net Fastmail smtp.fastmail.com:465 SSL/TLS fastmessaging.com Fastmail smtp.fastmail.com:465 SSL/TLS fea.st Fastmail smtp.fastmail.com:465 SSL/TLS fmail.co.uk Fastmail smtp.fastmail.com:465 SSL/TLS fmailbox.com Fastmail smtp.fastmail.com:465 SSL/TLS fmgirl.com Fastmail smtp.fastmail.com:465 SSL/TLS fmguy.com Fastmail smtp.fastmail.com:465 SSL/TLS ftml.net Fastmail smtp.fastmail.com:465 SSL/TLS hailmail.net Fastmail smtp.fastmail.com:465 SSL/TLS imap-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS imap.cc Fastmail smtp.fastmail.com:465 SSL/TLS imapmail.org Fastmail smtp.fastmail.com:465 SSL/TLS inoutbox.com Fastmail smtp.fastmail.com:465 SSL/TLS internet-e-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS internet-mail.org Fastmail smtp.fastmail.com:465 SSL/TLS internetemails.net Fastmail smtp.fastmail.com:465 SSL/TLS internetmailing.net Fastmail smtp.fastmail.com:465 SSL/TLS jetemail.net Fastmail smtp.fastmail.com:465 SSL/TLS justemail.net Fastmail smtp.fastmail.com:465 SSL/TLS letterboxes.org Fastmail smtp.fastmail.com:465 SSL/TLS mail-central.com Fastmail smtp.fastmail.com:465 SSL/TLS mail-page.com Fastmail smtp.fastmail.com:465 SSL/TLS mailas.com Fastmail smtp.fastmail.com:465 SSL/TLS mailbolt.com Fastmail smtp.fastmail.com:465 SSL/TLS mailc.net Fastmail smtp.fastmail.com:465 SSL/TLS mailcan.com Fastmail smtp.fastmail.com:465 SSL/TLS mailforce.net Fastmail smtp.fastmail.com:465 SSL/TLS mailhaven.com Fastmail smtp.fastmail.com:465 SSL/TLS mailingaddress.org Fastmail smtp.fastmail.com:465 SSL/TLS mailite.com Fastmail smtp.fastmail.com:465 SSL/TLS mailmight.com Fastmail smtp.fastmail.com:465 SSL/TLS mailnew.com Fastmail smtp.fastmail.com:465 SSL/TLS mailsent.net Fastmail smtp.fastmail.com:465 SSL/TLS mailservice.ms Fastmail smtp.fastmail.com:465 SSL/TLS mailup.net Fastmail smtp.fastmail.com:465 SSL/TLS mailworks.org Fastmail smtp.fastmail.com:465 SSL/TLS ml1.net Fastmail smtp.fastmail.com:465 SSL/TLS mm.st Fastmail smtp.fastmail.com:465 SSL/TLS myfastmail.com Fastmail smtp.fastmail.com:465 SSL/TLS mymacmail.com Fastmail smtp.fastmail.com:465 SSL/TLS nospammail.net Fastmail smtp.fastmail.com:465 SSL/TLS ownmail.net Fastmail smtp.fastmail.com:465 SSL/TLS petml.com Fastmail smtp.fastmail.com:465 SSL/TLS postinbox.com Fastmail smtp.fastmail.com:465 SSL/TLS postpro.net Fastmail smtp.fastmail.com:465 SSL/TLS proinbox.com Fastmail smtp.fastmail.com:465 SSL/TLS promessage.com Fastmail smtp.fastmail.com:465 SSL/TLS realemail.net Fastmail smtp.fastmail.com:465 SSL/TLS reallyfast.biz Fastmail smtp.fastmail.com:465 SSL/TLS reallyfast.info Fastmail smtp.fastmail.com:465 SSL/TLS rushpost.com Fastmail smtp.fastmail.com:465 SSL/TLS sent.as Fastmail smtp.fastmail.com:465 SSL/TLS sent.at Fastmail smtp.fastmail.com:465 SSL/TLS sent.com Fastmail smtp.fastmail.com:465 SSL/TLS speedpost.net Fastmail smtp.fastmail.com:465 SSL/TLS speedymail.org Fastmail smtp.fastmail.com:465 SSL/TLS ssl-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS swift-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS the-fastest.net Fastmail smtp.fastmail.com:465 SSL/TLS the-quickest.com Fastmail smtp.fastmail.com:465 SSL/TLS theinternetemail.com Fastmail smtp.fastmail.com:465 SSL/TLS veryfast.biz Fastmail smtp.fastmail.com:465 SSL/TLS veryspeedy.net Fastmail smtp.fastmail.com:465 SSL/TLS warpmail.net Fastmail smtp.fastmail.com:465 SSL/TLS xsmail.com Fastmail smtp.fastmail.com:465 SSL/TLS yepmail.net Fastmail smtp.fastmail.com:465 SSL/TLS your-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS","title":"Email via MailKit"},{"location":"services/mailkitemail/#email-via-mailkit","text":"Schemes: email:// , smtp:// , smtps:// Format: text, markdown, html Homepage: https://genteure.github.io/naprise/services/mailkitemail API Documentation: https://genteure.github.io/naprise/services/mailkitemail List of all supported services: Services This service is in a separate nuget package: Naprise.Service.MailKit . It uses MailKit to send emails. dotnet add package Naprise . Service . MailKit # or Install-Package Naprise . Service . MailKit You will need to register the service in ServiceRegistry before using it. Naprise . DefaultRegistry . AddMailKit ();","title":"Email via MailKit"},{"location":"services/mailkitemail/#email-url-format","text":"As a quick way to send emails from your personal email account to yourself, you can use the email URL format. email://{user}:{pass}@{domain} user : The name of your email account. pass : The password or application-secret of your email account. domain : The domain of your email account. Examples: email://john:myS3cr5t@gmail.com email://aoi:somePassword@yahoo.co.jp email://123456:furageoupjhjygto@qq.com See the table below for a list of supported domains.","title":"email URL Format"},{"location":"services/mailkitemail/#smtp-and-smtps-url-format","text":"If your email service is not supported by email URL, or you want to send emails from a custom email server, you can use the smtp and smtps URL formats. smtp://{smtp_host}:{smtp_port}/{from}/{to} smtps://{smtp_host}:{smtp_port}/{from}/{to} smtp://{smtp_host}:{smtp_port}/{username}/{password}/{from}/{to} smtps://{smtp_host}:{smtp_port}/{username}/{password}/{from}/{to} smtp:// : Connect to the SMTP server using unencrypted plain text or STARTTLS . smtps:// : Connect to the SMTP server using encrypted SSL/TLS . TLDR : Use smtp:// for port 25 and 587 , and smtps:// for port 465 . Some email providers' documentation refer STARTTLS as just TLS , which technically is not the same thing. SSL now days in the context of SMTP often means TLS 1.2 is being used, even if it's being called SSL and not TLS . The client will establish a SSL/TLS connection first just like HTTPS, and then start the SMTP protocol. The standard port for SMTP over SSL/TLS is 465 . STARTTLS on the other hand, is a SMTP command that tells the SMTP server to switch to TLS encryption after the connection is established. The client will establish a plain text connection first, and then send the STARTTLS command to the SMTP server, if both parties support it, the SMTP server will switch to TLS encryption. The most common port for SMTP with STARTTLS support is 587 . smtp_host : The SMTP host of your email server. smtp_port : The SMTP port of your email server, always required . username : The username of your email account. password : The password or application-secret of your email account. from : The email address of the sender. to : The email address of the recipient. If the username and password are not provided, it's assumed that the SMTP server does not require authentication, which might be the case for self-hosted local SMTP servers. Examples: smtps://smtp.gmail.com:465/jone@gmail.com/JoneDoe1234/jone@gmail.com/friend@outlook.com smtp://smtp.local:25/homeserver/password/homeserver@local/admin@local","title":"smtp and smtps URL Format"},{"location":"services/mailkitemail/#supported-domains","text":"The following table lists the supported domains for email URLs and their corresponding SMTP settings. If your domain is not listed here, you can still use the smtp or smtps URL formats to send emails. Domain Name SMTP Server Encryption gmail.com Gmail smtp.gmail.com:465 SSL/TLS outlook.com Outlook smtp.office365.com:587 NONE/STARTTLS hotmail.com Outlook smtp.office365.com:587 NONE/STARTTLS live.com Outlook smtp.office365.com:587 NONE/STARTTLS outlook.jp Outlook smtp.office365.com:587 NONE/STARTTLS hotmail.co.jp Outlook smtp.office365.com:587 NONE/STARTTLS live.jp Outlook smtp.office365.com:587 NONE/STARTTLS icloud.com iCloud smtp.mail.me.com:587 NONE/STARTTLS yahoo.co.jp Yahoo \u30e1\u30fc\u30eb smtp.mail.yahoo.co.jp:465 SSL/TLS ymail.ne.jp Yahoo \u30e1\u30fc\u30eb smtp.mail.yahoo.co.jp:465 SSL/TLS zoho.com Zoho Mail smtp.zoho.com:465 SSL/TLS zohomail.com Zoho Mail smtp.zoho.com:465 SSL/TLS qq.com QQ Mail smtp.qq.com:465 SSL/TLS vip.qq.com QQ Mail smtp.qq.com:465 SSL/TLS foxmail.com QQ Mail smtp.qq.com:465 SSL/TLS 163.com Netease Mail smtp.163.com:465 SSL/TLS 126.com Netease Mail smtp.126.com:465 SSL/TLS yeah.net Netease Mail smtp.yeah.net:465 SSL/TLS vip.163.com Netease Mail smtp.vip.163.com:465 SSL/TLS vip.126.com Netease Mail smtp.vip.126.com:465 SSL/TLS 188.com Netease Mail smtp.188.com:465 SSL/TLS 139.com 139 Mail (China Mobile) smtp.139.com:465 SSL/TLS 189.cn 189 Mail (China Telecom) smtp.189.cn:465 SSL/TLS wo.cn Wo Mail (China Unicom) smtp.wo.cn:465 SSL/TLS sohu.com Sohu Mail smtp.sohu.com:465 SSL/TLS vip.sohu.com Sohu Mail smtp.vip.sohu.com:25 NONE/STARTTLS sina.com Sina Mail smtp.sina.com:465 SSL/TLS sina.cn Sina Mail smtp.sina.cn:465 SSL/TLS vip.sina.com Sina Mail smtp.vip.sina.com:465 SSL/TLS vip.sina.cn Sina Mail smtp.vip.sina.cn:465 SSL/TLS tom.com Tom Mail smtp.tom.com:465 SSL/TLS vip.tom.com Tom Mail smtp.tom.com:465 SSL/TLS 163.net Tom Mail smtp.tom.com:465 SSL/TLS 163vip.com Tom Mail smtp.tom.com:465 SSL/TLS yandex.com Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.net Yandex Mail smtp.yandex.com:465 SSL/TLS ya.ru Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.ru Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.by Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.kz Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.uz Yandex Mail smtp.yandex.com:465 SSL/TLS yandex.fr Yandex Mail smtp.yandex.com:465 SSL/TLS narod.ru Yandex Mail smtp.yandex.com:465 SSL/TLS mail.ru Mail.ru smtp.mail.ru:465 SSL/TLS inbox.ru Mail.ru smtp.mail.ru:465 SSL/TLS list.ru Mail.ru smtp.mail.ru:465 SSL/TLS bk.ru Mail.ru smtp.mail.ru:465 SSL/TLS yahoo.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS myyahoo.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS ymail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS y7mail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS rocketmail.com Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ar Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.au Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.br Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.co Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.hk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.hr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.mx Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.my Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.pe Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ph Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.sg Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.tr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.tw Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ua Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.ve Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.com.vn Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.id Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.il Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.in Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.kr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.nz Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.th Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.uk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.co.za Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.at Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.be Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.bg Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ca Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.cl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.cz Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.de Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.dk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ee Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.es Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.fi Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.fr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.gr Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.hu Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ie Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.in Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.it Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.lv Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.nl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.no Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.pl Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.pt Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.ro Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.se Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS yahoo.sk Yahoo Mail smtp.mail.yahoo.com:465 SSL/TLS 123mail.org Fastmail smtp.fastmail.com:465 SSL/TLS 150mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 150ml.com Fastmail smtp.fastmail.com:465 SSL/TLS 16mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 2-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS 4email.net Fastmail smtp.fastmail.com:465 SSL/TLS 50mail.com Fastmail smtp.fastmail.com:465 SSL/TLS airpost.net Fastmail smtp.fastmail.com:465 SSL/TLS allmail.net Fastmail smtp.fastmail.com:465 SSL/TLS cluemail.com Fastmail smtp.fastmail.com:465 SSL/TLS elitemail.org Fastmail smtp.fastmail.com:465 SSL/TLS emailcorner.net Fastmail smtp.fastmail.com:465 SSL/TLS emailengine.net Fastmail smtp.fastmail.com:465 SSL/TLS emailengine.org Fastmail smtp.fastmail.com:465 SSL/TLS emailgroups.net Fastmail smtp.fastmail.com:465 SSL/TLS emailplus.org Fastmail smtp.fastmail.com:465 SSL/TLS emailuser.net Fastmail smtp.fastmail.com:465 SSL/TLS eml.cc Fastmail smtp.fastmail.com:465 SSL/TLS f-m.fm Fastmail smtp.fastmail.com:465 SSL/TLS fast-email.com Fastmail smtp.fastmail.com:465 SSL/TLS fast-mail.org Fastmail smtp.fastmail.com:465 SSL/TLS fastem.com Fastmail smtp.fastmail.com:465 SSL/TLS fastemailer.com Fastmail smtp.fastmail.com:465 SSL/TLS fastest.cc Fastmail smtp.fastmail.com:465 SSL/TLS fastimap.com Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.cn Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.co.uk Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.com Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.com.au Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.de Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.es Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.fm Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.fr Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.im Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.in Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.jp Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.mx Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.net Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.nl Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.org Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.se Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.to Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.tw Fastmail smtp.fastmail.com:465 SSL/TLS fastmail.uk Fastmail smtp.fastmail.com:465 SSL/TLS fastmailbox.net Fastmail smtp.fastmail.com:465 SSL/TLS fastmessaging.com Fastmail smtp.fastmail.com:465 SSL/TLS fea.st Fastmail smtp.fastmail.com:465 SSL/TLS fmail.co.uk Fastmail smtp.fastmail.com:465 SSL/TLS fmailbox.com Fastmail smtp.fastmail.com:465 SSL/TLS fmgirl.com Fastmail smtp.fastmail.com:465 SSL/TLS fmguy.com Fastmail smtp.fastmail.com:465 SSL/TLS ftml.net Fastmail smtp.fastmail.com:465 SSL/TLS hailmail.net Fastmail smtp.fastmail.com:465 SSL/TLS imap-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS imap.cc Fastmail smtp.fastmail.com:465 SSL/TLS imapmail.org Fastmail smtp.fastmail.com:465 SSL/TLS inoutbox.com Fastmail smtp.fastmail.com:465 SSL/TLS internet-e-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS internet-mail.org Fastmail smtp.fastmail.com:465 SSL/TLS internetemails.net Fastmail smtp.fastmail.com:465 SSL/TLS internetmailing.net Fastmail smtp.fastmail.com:465 SSL/TLS jetemail.net Fastmail smtp.fastmail.com:465 SSL/TLS justemail.net Fastmail smtp.fastmail.com:465 SSL/TLS letterboxes.org Fastmail smtp.fastmail.com:465 SSL/TLS mail-central.com Fastmail smtp.fastmail.com:465 SSL/TLS mail-page.com Fastmail smtp.fastmail.com:465 SSL/TLS mailas.com Fastmail smtp.fastmail.com:465 SSL/TLS mailbolt.com Fastmail smtp.fastmail.com:465 SSL/TLS mailc.net Fastmail smtp.fastmail.com:465 SSL/TLS mailcan.com Fastmail smtp.fastmail.com:465 SSL/TLS mailforce.net Fastmail smtp.fastmail.com:465 SSL/TLS mailhaven.com Fastmail smtp.fastmail.com:465 SSL/TLS mailingaddress.org Fastmail smtp.fastmail.com:465 SSL/TLS mailite.com Fastmail smtp.fastmail.com:465 SSL/TLS mailmight.com Fastmail smtp.fastmail.com:465 SSL/TLS mailnew.com Fastmail smtp.fastmail.com:465 SSL/TLS mailsent.net Fastmail smtp.fastmail.com:465 SSL/TLS mailservice.ms Fastmail smtp.fastmail.com:465 SSL/TLS mailup.net Fastmail smtp.fastmail.com:465 SSL/TLS mailworks.org Fastmail smtp.fastmail.com:465 SSL/TLS ml1.net Fastmail smtp.fastmail.com:465 SSL/TLS mm.st Fastmail smtp.fastmail.com:465 SSL/TLS myfastmail.com Fastmail smtp.fastmail.com:465 SSL/TLS mymacmail.com Fastmail smtp.fastmail.com:465 SSL/TLS nospammail.net Fastmail smtp.fastmail.com:465 SSL/TLS ownmail.net Fastmail smtp.fastmail.com:465 SSL/TLS petml.com Fastmail smtp.fastmail.com:465 SSL/TLS postinbox.com Fastmail smtp.fastmail.com:465 SSL/TLS postpro.net Fastmail smtp.fastmail.com:465 SSL/TLS proinbox.com Fastmail smtp.fastmail.com:465 SSL/TLS promessage.com Fastmail smtp.fastmail.com:465 SSL/TLS realemail.net Fastmail smtp.fastmail.com:465 SSL/TLS reallyfast.biz Fastmail smtp.fastmail.com:465 SSL/TLS reallyfast.info Fastmail smtp.fastmail.com:465 SSL/TLS rushpost.com Fastmail smtp.fastmail.com:465 SSL/TLS sent.as Fastmail smtp.fastmail.com:465 SSL/TLS sent.at Fastmail smtp.fastmail.com:465 SSL/TLS sent.com Fastmail smtp.fastmail.com:465 SSL/TLS speedpost.net Fastmail smtp.fastmail.com:465 SSL/TLS speedymail.org Fastmail smtp.fastmail.com:465 SSL/TLS ssl-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS swift-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS the-fastest.net Fastmail smtp.fastmail.com:465 SSL/TLS the-quickest.com Fastmail smtp.fastmail.com:465 SSL/TLS theinternetemail.com Fastmail smtp.fastmail.com:465 SSL/TLS veryfast.biz Fastmail smtp.fastmail.com:465 SSL/TLS veryspeedy.net Fastmail smtp.fastmail.com:465 SSL/TLS warpmail.net Fastmail smtp.fastmail.com:465 SSL/TLS xsmail.com Fastmail smtp.fastmail.com:465 SSL/TLS yepmail.net Fastmail smtp.fastmail.com:465 SSL/TLS your-mail.com Fastmail smtp.fastmail.com:465 SSL/TLS","title":"Supported Domains"},{"location":"services/notica/","text":"Notica \u00b6 Schemes: notica:// , noticas:// Format: text Homepage: https://notica.us/ API Documentation: https://notica.us/ List of all supported services: Services URL Format \u00b6 notica://{user}:{password}@{host}:{port}/{token} noticas://{user}:{password}@{host}:{port}/{token} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. token : The unique ID displayed on Notica. Query Parameters \u00b6 None Setup Guide \u00b6 For the hosted service, open https://notica.us and allow notifications. The URL of the page will change to something like https://notica.us/?7WUU7N . The query parameter is the token, in this case 7WUU7N . So the URL would be: noticas://notica.us/7WUU7N Note there is no ? in the URL, the token is part of the path, not the query.","title":"Notica"},{"location":"services/notica/#notica","text":"Schemes: notica:// , noticas:// Format: text Homepage: https://notica.us/ API Documentation: https://notica.us/ List of all supported services: Services","title":"Notica"},{"location":"services/notica/#url-format","text":"notica://{user}:{password}@{host}:{port}/{token} noticas://{user}:{password}@{host}:{port}/{token} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. token : The unique ID displayed on Notica.","title":"URL Format"},{"location":"services/notica/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/notica/#setup-guide","text":"For the hosted service, open https://notica.us and allow notifications. The URL of the page will change to something like https://notica.us/?7WUU7N . The query parameter is the token, in this case 7WUU7N . So the URL would be: noticas://notica.us/7WUU7N Note there is no ? in the URL, the token is part of the path, not the query.","title":"Setup Guide"},{"location":"services/notifyrun/","text":"notify.run \u00b6 Schemes: notifyrun:// , notifyruns:// Format: text Homepage: https://notify.run/ API Documentation: https://notify.run/ List of all supported services: Services URL Format \u00b6 notifyrun://{user}:{password}@{host}:{port}/{channel} notifyruns://{user}:{password}@{host}:{port}/{channel} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. channel : The notify.run notification channel. Query Parameters \u00b6 None Setup Guide \u00b6 For the hosted service, open https://notify.run and click Create a Channel . A channel id will be generated, for example pCEVD6IkQiwQvIKtOLVn . The URL would be: notifyruns://notify.run/pCEVD6IkQiwQvIKtOLVn","title":"notify.run"},{"location":"services/notifyrun/#notifyrun","text":"Schemes: notifyrun:// , notifyruns:// Format: text Homepage: https://notify.run/ API Documentation: https://notify.run/ List of all supported services: Services","title":"notify.run"},{"location":"services/notifyrun/#url-format","text":"notifyrun://{user}:{password}@{host}:{port}/{channel} notifyruns://{user}:{password}@{host}:{port}/{channel} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. channel : The notify.run notification channel.","title":"URL Format"},{"location":"services/notifyrun/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/notifyrun/#setup-guide","text":"For the hosted service, open https://notify.run and click Create a Channel . A channel id will be generated, for example pCEVD6IkQiwQvIKtOLVn . The URL would be: notifyruns://notify.run/pCEVD6IkQiwQvIKtOLVn","title":"Setup Guide"},{"location":"services/ntfy/","text":"ntfy.sh \u00b6 Schemes: ntfy:// , ntfys:// Format: text Homepage: https://ntfy.sh/ API Documentation: https://docs.ntfy.sh/publish/ List of all supported services: Services URL Format \u00b6 ntfy://{user}:{password}@{host}:{port}/{topic} ntfys://{user}:{password}@{host}:{port}/{topic} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. topic : The ntfy notification topic. Query Parameters \u00b6 Parameter Description tags A comma-separated list of tags. priority The priority of the notification as a number. click A URL to open when the notification is clicked. delay The delay before the notification is sent. email The email address to send the notification to. Setup Guide \u00b6 Just use any string as the topic and you're good to go, no setup required. Example: ntfys://ntfy.sh/test","title":"ntfy.sh"},{"location":"services/ntfy/#ntfysh","text":"Schemes: ntfy:// , ntfys:// Format: text Homepage: https://ntfy.sh/ API Documentation: https://docs.ntfy.sh/publish/ List of all supported services: Services","title":"ntfy.sh"},{"location":"services/ntfy/#url-format","text":"ntfy://{user}:{password}@{host}:{port}/{topic} ntfys://{user}:{password}@{host}:{port}/{topic} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. topic : The ntfy notification topic.","title":"URL Format"},{"location":"services/ntfy/#query-parameters","text":"Parameter Description tags A comma-separated list of tags. priority The priority of the notification as a number. click A URL to open when the notification is clicked. delay The delay before the notification is sent. email The email address to send the notification to.","title":"Query Parameters"},{"location":"services/ntfy/#setup-guide","text":"Just use any string as the topic and you're good to go, no setup required. Example: ntfys://ntfy.sh/test","title":"Setup Guide"},{"location":"services/onebot11/","text":"OneBot 11 \u00b6 Schemes: onebot11:// , onebot11s:// Format: text Homepage: https://11.onebot.dev/ API Documentation: https://github.com/botuniverse/onebot-11/blob/master/api/public.md#send_msg-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF List of all supported services: Services URL Format \u00b6 onebot11://{access_token}@{host}:{port}/private/{user_id} onebot11s://{access_token}@{host}:{port}/private/{user_id} onebot11://{access_token}@{host}:{port}/group/{group_id} onebot11s://{access_token}@{host}:{port}/group/{group_id} access_token : Optional. The access token of your bot. host and port : The address of the service. user_id : The id of the user. group_id : The group number. Query Parameters \u00b6 None","title":"OneBot 11"},{"location":"services/onebot11/#onebot-11","text":"Schemes: onebot11:// , onebot11s:// Format: text Homepage: https://11.onebot.dev/ API Documentation: https://github.com/botuniverse/onebot-11/blob/master/api/public.md#send_msg-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF List of all supported services: Services","title":"OneBot 11"},{"location":"services/onebot11/#url-format","text":"onebot11://{access_token}@{host}:{port}/private/{user_id} onebot11s://{access_token}@{host}:{port}/private/{user_id} onebot11://{access_token}@{host}:{port}/group/{group_id} onebot11s://{access_token}@{host}:{port}/group/{group_id} access_token : Optional. The access token of your bot. host and port : The address of the service. user_id : The id of the user. group_id : The group number.","title":"URL Format"},{"location":"services/onebot11/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/onebot12/","text":"OneBot 12 \u00b6 Schemes: onebot12:// , onebot12s:// Format: text Homepage: https://12.onebot.dev/ API Documentation: https://12.onebot.dev/interface/message/actions/#send_message List of all supported services: Services URL Format \u00b6 onebot12://{access_token}@{host}:{port}/private/{user_id} onebot12://{access_token}@{host}:{port}/group/{group_id} onebot12://{access_token}@{host}:{port}/channel/{guild_id}/{channel_id} onebot12s://{access_token}@{host}:{port}/private/{user_id} onebot12s://{access_token}@{host}:{port}/group/{group_id} onebot12s://{access_token}@{host}:{port}/channel/{guild_id}/{channel_id} access_token : Optional. The access token of your bot. host and port : The address of the service. user_id : The id of the user. group_id : The group number. guild_id and channel_id : The ids for the guild and channel. Query Parameters \u00b6 None","title":"OneBot 12"},{"location":"services/onebot12/#onebot-12","text":"Schemes: onebot12:// , onebot12s:// Format: text Homepage: https://12.onebot.dev/ API Documentation: https://12.onebot.dev/interface/message/actions/#send_message List of all supported services: Services","title":"OneBot 12"},{"location":"services/onebot12/#url-format","text":"onebot12://{access_token}@{host}:{port}/private/{user_id} onebot12://{access_token}@{host}:{port}/group/{group_id} onebot12://{access_token}@{host}:{port}/channel/{guild_id}/{channel_id} onebot12s://{access_token}@{host}:{port}/private/{user_id} onebot12s://{access_token}@{host}:{port}/group/{group_id} onebot12s://{access_token}@{host}:{port}/channel/{guild_id}/{channel_id} access_token : Optional. The access token of your bot. host and port : The address of the service. user_id : The id of the user. group_id : The group number. guild_id and channel_id : The ids for the guild and channel.","title":"URL Format"},{"location":"services/onebot12/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/pushdeer/","text":"PushDeer \u00b6 Schemes: pushdeer:// , pushdeers:// Format: text, markdown Homepage: https://www.pushdeer.com/ API Documentation: https://www.pushdeer.com/dev.html#%E6%8E%A8%E9%80%81%E6%B6%88%E6%81%AF List of all supported services: Services URL Format \u00b6 pushdeer://{user}:{pass}@{host}:{port}/{pushkey} pushdeers://{user}:{pass}@{host}:{port}/{pushkey} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. pushkey : The PushKey. Query Parameters \u00b6 None Setup Guide \u00b6 Create a Key in the PushDeer app, it should look similar to PDUBj4fkoihKi93dLfC7PXDzuHUVN4NSq . The hosted service's API domain is api2.pushdeer.com , so the URL would be: pushdeers://api2.pushdeer.com/PDUBj4fkoihKi93dLfC7PXDzuHUVN4NSq","title":"PushDeer"},{"location":"services/pushdeer/#pushdeer","text":"Schemes: pushdeer:// , pushdeers:// Format: text, markdown Homepage: https://www.pushdeer.com/ API Documentation: https://www.pushdeer.com/dev.html#%E6%8E%A8%E9%80%81%E6%B6%88%E6%81%AF List of all supported services: Services","title":"PushDeer"},{"location":"services/pushdeer/#url-format","text":"pushdeer://{user}:{pass}@{host}:{port}/{pushkey} pushdeers://{user}:{pass}@{host}:{port}/{pushkey} user and password : Optional HTTP Basic Auth credentials. host and port : The address of the service. pushkey : The PushKey.","title":"URL Format"},{"location":"services/pushdeer/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/pushdeer/#setup-guide","text":"Create a Key in the PushDeer app, it should look similar to PDUBj4fkoihKi93dLfC7PXDzuHUVN4NSq . The hosted service's API domain is api2.pushdeer.com , so the URL would be: pushdeers://api2.pushdeer.com/PDUBj4fkoihKi93dLfC7PXDzuHUVN4NSq","title":"Setup Guide"},{"location":"services/pushplus/","text":"PushPlus \u00b6 Schemes: pushplus:// Format: text, markdown Homepage: https://www.pushplus.plus/ API Documentation: https://www.pushplus.plus/doc/guide/api.html List of all supported services: Services URL Format \u00b6 pushplus://{token}@{channel} token : The pushplus token. channel : The messaging channel, valid values are wechat , webhook , cp , mail and sms . Query Parameters \u00b6 None","title":"PushPlus"},{"location":"services/pushplus/#pushplus","text":"Schemes: pushplus:// Format: text, markdown Homepage: https://www.pushplus.plus/ API Documentation: https://www.pushplus.plus/doc/guide/api.html List of all supported services: Services","title":"PushPlus"},{"location":"services/pushplus/#url-format","text":"pushplus://{token}@{channel} token : The pushplus token. channel : The messaging channel, valid values are wechat , webhook , cp , mail and sms .","title":"URL Format"},{"location":"services/pushplus/#query-parameters","text":"None","title":"Query Parameters"},{"location":"services/serverchan/","text":"ServerChan \u00b6 Schemes: serverchan:// Format: text, markdown Homepage: https://sct.ftqq.com/ API Documentation: https://sct.ftqq.com/sendkey List of all supported services: Services URL Format \u00b6 serverchan://{token}@serverchan token : The serverchan token. The host is always serverchan . Query Parameters \u00b6 Parameter Description channel The messaging channel. openid The openid of the user to send the message to.","title":"ServerChan"},{"location":"services/serverchan/#serverchan","text":"Schemes: serverchan:// Format: text, markdown Homepage: https://sct.ftqq.com/ API Documentation: https://sct.ftqq.com/sendkey List of all supported services: Services","title":"ServerChan"},{"location":"services/serverchan/#url-format","text":"serverchan://{token}@serverchan token : The serverchan token. The host is always serverchan .","title":"URL Format"},{"location":"services/serverchan/#query-parameters","text":"Parameter Description channel The messaging channel. openid The openid of the user to send the message to.","title":"Query Parameters"},{"location":"services/telegram/","text":"Telegram \u00b6 Schemes: telegram:// Format: text Homepage: https://telegram.org/ API Documentation: https://core.telegram.org/bots/api#sendmessage List of all supported services: Services URL Format \u00b6 telegram://{token}@{chat_id} token : The telegram bot token. chat_id : The chat id to send the message to. If chat_id is a number (group id or user id) it will be sent to telegram api as is, otherwise it will be prefixed with @ before sent to telegram api. Query Parameters \u00b6 Parameter Description api_host The telegram api host, default is https://api.telegram.org . parse_mode Mode for parsing entities in the message text, default is none. message_thread_id Unique identifier for the target message thread (topic) of the forum; for forum supergroups only. disable_web_page_preview Disables link previews for links in this message. disable_notification Sends the message silently. Users will receive a notification with no sound. protect_content Protects the contents of the sent message from forwarding and saving. Setup Guide \u00b6 Create a Telegram Bot \u00b6 Open BotFather in Telegram. Send /newbot to create a new bot. Enter the bot name and username. Copy the bot token. Get the Chat ID \u00b6 For private chat, send a message to the bot. For groups, add the bot to the group. Open the following link in your browser: https://api.telegram.org/bot{token}/getUpdates Replace {token} with your bot token. The id field under chat is the chat id. Example URLs \u00b6 Direct message (private chat): telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@123456789 Group: telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@-123456789 Channel: telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@channel_name","title":"Telegram"},{"location":"services/telegram/#telegram","text":"Schemes: telegram:// Format: text Homepage: https://telegram.org/ API Documentation: https://core.telegram.org/bots/api#sendmessage List of all supported services: Services","title":"Telegram"},{"location":"services/telegram/#url-format","text":"telegram://{token}@{chat_id} token : The telegram bot token. chat_id : The chat id to send the message to. If chat_id is a number (group id or user id) it will be sent to telegram api as is, otherwise it will be prefixed with @ before sent to telegram api.","title":"URL Format"},{"location":"services/telegram/#query-parameters","text":"Parameter Description api_host The telegram api host, default is https://api.telegram.org . parse_mode Mode for parsing entities in the message text, default is none. message_thread_id Unique identifier for the target message thread (topic) of the forum; for forum supergroups only. disable_web_page_preview Disables link previews for links in this message. disable_notification Sends the message silently. Users will receive a notification with no sound. protect_content Protects the contents of the sent message from forwarding and saving.","title":"Query Parameters"},{"location":"services/telegram/#setup-guide","text":"","title":"Setup Guide"},{"location":"services/telegram/#create-a-telegram-bot","text":"Open BotFather in Telegram. Send /newbot to create a new bot. Enter the bot name and username. Copy the bot token.","title":"Create a Telegram Bot"},{"location":"services/telegram/#get-the-chat-id","text":"For private chat, send a message to the bot. For groups, add the bot to the group. Open the following link in your browser: https://api.telegram.org/bot{token}/getUpdates Replace {token} with your bot token. The id field under chat is the chat id.","title":"Get the Chat ID"},{"location":"services/telegram/#example-urls","text":"Direct message (private chat): telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@123456789 Group: telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@-123456789 Channel: telegram://123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11@channel_name","title":"Example URLs"}]}